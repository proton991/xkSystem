#thymelea
spring.thymeleaf.prefix= classpath:/templates/
spring.thymeleaf.suffix= .html
spring.thymeleaf.mode= HTML5
spring.thymeleaf.encoding= UTF-8
spring.thymeleaf.servlet.content-type= text/html
spring.thymeleaf.cache= false

########################################################
###datasource
########################################################
spring.datasource.url = jdbc:mysql://localhost:3306/fdu_xk?useUnicode=true&characterEncoding=utf8&useSSL=false
spring.datasource.username = root
spring.datasource.password = 123456
spring.datasource.driverClassName = com.mysql.jdbc.Driver
#spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.initial-size= 1
spring.datasource.min-idle= 3
spring.datasource.max-idle= 20
spring.datasource.max-active= 20
spring.datasource.time-between-eviction-runs-millis: 60000
spring.datasource.min-evictable-idle-time-millis: 30000
spring.datasource.validation-query: select 1
spring.datasource.test-while-idle: true
spring.datasource.test-on-borrow: false
spring.datasource.test-on-return: false
########################################################
###jpa
########################################################
spring.jpa.database= MYSQL
spring.jpa.show-sql= true
spring.jpa.hibernate.ddl-auto= update
spring.jpa.open-in-view= true
spring.jpa.properties.hibernate.enable_lazy_load_no_trans= true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect

#########################################################
###redis
#########################################################
server.port=8080
# Redis数据库索引（默认为0）
spring.redis.database=0
# Redis服务器地址
spring.redis.host=localhost
# Redis服务器连接端口
spring.redis.port=6379
# Redis服务器连接密码（默认为空）
spring.redis.password=
#连接池最大连接数（使用负值表示没有限制）
spring.redis.jedis.pool.max-idle=8
# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.jedis.pool.max-wait=
# 连接池中的最大空闲连接
# 连接池中的最小空闲连接
spring.redis.jedis.pool.min-idle=0
# 连接超时时间（毫秒）
spring.redis.timeout=0

#########################################################
####kafka
#########################################################
### producer
#spring.kafka.producer.bootstrap-servers=192.168.56.102:9092
#spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
#
### consumer
#spring.kafka.consumer.bootstrap-servers=192.168.56.102:9092
#spring.kafka.consumer.group-id=seconds-kill
#spring.kafka.consumer.auto-offset-reset=earliest
#spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.topic=test
#spring.kafka.consumer.thread=3

#热部署生效
spring.devtools.restart.enabled=true

#设置重启的目录
spring.devtools.restart.additional-paths=src/main/java

#classpath目录下的WEB-INF文件夹内容修改不重启
spring.devtools.restart.exclude=WEB-INF/**

## MULTIPART (MultipartProperties)
# 开启 multipart 上传功能
spring.servlet.multipart.enabled=true
# 文件写入磁盘的阈值
spring.servlet.multipart.file-size-threshold=2KB
# 最大文件大小
spring.servlet.multipart.max-file-size=200MB
# 最大请求大小
spring.servlet.multipart.max-request-size=215MB
### 文件存储所需参数
#spring.servlet.multipart.location="D:\\vueUpload\\"

